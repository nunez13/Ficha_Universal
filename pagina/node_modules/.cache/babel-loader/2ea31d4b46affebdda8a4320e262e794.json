{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\Ficha_Universal\\\\pagina\\\\src\\\\components\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport FormLogin from './FormLogin';\nimport Dashboard from './Dashboard';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.redirectDashboard = () => {\n      const isLoggedIn = this.state.isLoggedIn;\n\n      if (isLoggedIn) {\n        return React.createElement(Redirect, {\n          from: \"/Login\",\n          to: \"/Dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Usuario no Logeado\");\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      dataUser: null\n    };\n    this.LoggedIn = this.LoggedIn.bind(this);\n  }\n\n  LoggedIn() {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n  render() {\n    console.log(this.state.isLoggedIn);\n    const isLoggedIn = this.state.isLoggedIn;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      render: props => isLoggedIn ? React.createElement(Dashboard, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })) : React.createElement(FormLogin, {\n        isLoggedIn: this.LoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Jorge\\Desktop\\Ficha_Universal\\pagina\\src\\components\\Login.jsx"],"names":["React","Component","FormLogin","Dashboard","BrowserRouter","Router","Route","Redirect","Login","constructor","props","redirectDashboard","isLoggedIn","state","dataUser","LoggedIn","bind","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AAEA,eAAe,MAAMC,KAAN,SAAoBP,SAApB,CAA6B;AAC3CQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAclBC,iBAdkB,GAcE,MAAM;AAAA,YAClBC,UADkB,GACJ,KAAKC,KADD,CAClBD,UADkB;;AAEzB,UAAGA,UAAH,EAAc;AACb,eAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,EAAE,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFA,MAEI;AACJ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACA;AAEA,KAtBiB;;AAEjB,SAAKC,KAAL,GAAa;AACZD,MAAAA,UAAU,EAAE,KADA;AAEZE,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA;;AAEDD,EAAAA,QAAQ,GAAG;AACV,SAAKE,QAAL,CAAc;AAAEL,MAAAA,UAAU,EAAE;AAAd,KAAd;AAED;;AAYAM,EAAAA,MAAM,GAAE;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWD,UAAvB;AADO,UAEAA,UAFA,GAEc,KAAKC,KAFnB,CAEAD,UAFA;AAGR,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAQ,MAAA,MAAM,EAAGF,KAAD,IACTE,UAAU,GACP,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADO,GAEP,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKK,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA;AAUC;;AAtC0C","sourcesContent":["import React, {Component} from 'react'\r\nimport FormLogin from './FormLogin'\r\nimport Dashboard from './Dashboard'\r\nimport { BrowserRouter as Router, Route, Redirect}  from 'react-router-dom'\r\n\r\nexport default class Login extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisLoggedIn: false,\r\n\t\t\tdataUser: null\r\n\t\t}\r\n\t\tthis.LoggedIn = this.LoggedIn.bind(this);\r\n\t}\r\n\r\n\tLoggedIn() {\r\n\t\tthis.setState({ isLoggedIn: true })\r\n\r\n}\r\n\r\n redirectDashboard = () => {\r\n\t\tconst {isLoggedIn} = this.state\r\n\t\tif(isLoggedIn){\r\n\t\t\treturn <Redirect from=\"/Login\" to=\"/Dashboard\"/>\r\n\t}else{\r\n\t\treturn <h3>Usuario no Logeado</h3>\r\n\t}\r\n\r\n }\r\n\t\r\n\trender(){\r\n\t\tconsole.log(this.state.isLoggedIn)\r\n\t\tconst {isLoggedIn} = this.state\r\n\treturn(\r\n\t<div>\r\n\t\t<Route  render={(props) => (\r\n         isLoggedIn\r\n          ? <Dashboard {...props} />\r\n          : <FormLogin isLoggedIn={this.LoggedIn}/>\r\n       )} />\r\n\t\t\t \r\n\t</div>\r\n\t)\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}