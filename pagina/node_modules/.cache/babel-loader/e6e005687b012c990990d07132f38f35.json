{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\Ficha_Universal\\\\pagina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\Ficha_Universal\\\\pagina\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jorge\\\\Desktop\\\\Ficha_Universal\\\\pagina\\\\src\\\\components\\\\FormRegistro.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; //Validar errores de formularios vacios\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); //Validar si es formulario es completado\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class FormRegistro extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      const name = target.name,\n            value = target.value;\n      this.setState({\n        [name]: value\n      });\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'rut':\n          formErrors.rut = value.length === 0 ? 'Debe Ingresar su Rut' : \"\";\n          break;\n\n        case 'name':\n          formErrors.name = value.length === 0 ? 'Debe ingresar su Nombre' : \"\";\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length === 0 ? 'Debe ingresar su Apellido' : \"\";\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 8 ? 'Debe contener mÃ­nimo 8 caracteres' : \"\";\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : \"Ingrese un Email Valido\";\n          break;\n\n        case 'nCollegeMedical':\n          formErrors.nCollegeMedical = value.length === 0 ? 'Debe ingresar Numero de Colegio Medico' : \"\";\n          break;\n\n        case 'profession':\n          formErrors.profession = value.length === 0 ? 'Debe ingresar su Profesion' : \"\";\n          break;\n      } //this.setState({formErrors, [name]: value },() => console.log(this.state));\n\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            formErrors = _this$state.formErrors,\n            rest = _objectWithoutProperties(_this$state, [\"formErrors\"]);\n\n      const result = formValid(_objectSpread({\n        formErrors\n      }, rest));\n      if (result === false) return alert('Complete el Formulario');\n      this.createUser(rest);\n    };\n\n    this.createUser = async info => {\n      try {\n        const res = await axios.post('http://localhost:5000/users', info);\n        localStorage.setItem('Token', res.data.token);\n      } catch (err) {\n        console.log(\"el error es:\", err);\n      }\n    };\n\n    this.state = {\n      rut: null,\n      name: null,\n      lastName: null,\n      password: null,\n      email: null,\n      gender: 'Default',\n      nCollegeMedical: null,\n      profession: null,\n      formErrors: {\n        rut: '',\n        name: '',\n        lastName: '',\n        password: '',\n        email: '',\n        gender: '',\n        nCollegeMedical: '',\n        profession: ''\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      style: {\n        top: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"card-image\",\n      style: {\n        backgroundImage: 'url(http://www.wallpaperk.com/wallpapers/envelope-minimal-blue-7837.jpg)',\n        width: '28rem'\n      },\n      className: \"cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-white rgba-stylish-strong py-5 px-5 z-depth-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"REGISTRO\"), React.createElement(\"strong\", {\n      className: \"green-text font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" MEDICO\"))), React.createElement(MDBInput, {\n      label: \"Rut\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"rut\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      name: \"rut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), formErrors.rut.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, formErrors.rut), React.createElement(MDBInput, {\n      label: \"Nombre\",\n      group: true,\n      type: \"text\",\n      name: \"name\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"name\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, formErrors.name), React.createElement(MDBInput, {\n      label: \"Apellido\",\n      group: true,\n      type: \"text\",\n      name: \"lastName\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"lastName\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, formErrors.lastName), React.createElement(MDBInput, {\n      label: \"Email\",\n      group: true,\n      type: \"email\",\n      name: \"email\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"email\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, formErrors.email), React.createElement(MDBInput, {\n      label: \"Contrase\\xF1a\",\n      group: true,\n      type: \"password\",\n      name: \"password\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"password\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, formErrors.password), React.createElement(MDBInput, {\n      label: \"N\\xBAColegioMedico\",\n      group: true,\n      type: \"number\",\n      name: \"nCollegeMedical\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"nCollegeMedical\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), formErrors.nCollegeMedical.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, formErrors.nCollegeMedical), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      id: \"gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Selecciona tu genero\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Masculino\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Femenino\")), React.createElement(MDBInput, {\n      label: \"Profesion\",\n      group: true,\n      type: \"text\",\n      name: \"profession\",\n      validate: true,\n      labelClass: \"white-text\",\n      onChange: this.handleChange,\n      id: \"profession\",\n      className: \"white-text mb-5 mt-4 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), formErrors.profession.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, formErrors.profession), React.createElement(MDBRow, {\n      className: \"d-flex align-items-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center mb-3 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"success\",\n      rounded: true,\n      type: \"button\",\n      className: \"btn-block z-depth-1\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Registrar\"))))))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Jorge\\Desktop\\Ficha_Universal\\pagina\\src\\components\\FormRegistro.jsx"],"names":["React","Component","axios","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBCard","MDBInput","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","FormRegistro","constructor","props","handleChange","target","name","value","setState","state","rut","lastName","password","email","test","nCollegeMedical","profession","handleSubmit","result","alert","createUser","info","res","post","localStorage","setItem","data","token","err","console","log","gender","render","top","backgroundImage","width","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput} from 'mdbreact';\r\n\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\r\n\r\nconst formValid = ({formErrors, ...rest}) =>{\r\n  let valid = true;\r\n  \r\n  //Validar errores de formularios vacios\r\n  Object.values(formErrors).forEach(val=> {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  //Validar si es formulario es completado\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false)\r\n  });\r\n  \r\n  return valid;\r\n}\r\n\r\nexport default class FormRegistro extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      rut: null,\r\n      name: null,\r\n      lastName: null,\r\n      password: null,\r\n      email: null,\r\n      gender: 'Default',\r\n      nCollegeMedical: null,\r\n      profession: null,\r\n      formErrors:{\r\n        rut: '',\r\n        name: '',\r\n        lastName: '',\r\n        password: '',\r\n        email: '',\r\n        gender: '',\r\n        nCollegeMedical: '',\r\n        profession: '',\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = ({target}) => {\r\n    const {name, value} = target\r\n    this.setState({[name]: value})\r\n    let formErrors = this.state.formErrors;\r\n  switch (name){\r\n      case 'rut':\r\n        formErrors.rut = \r\n        value.length === 0 ? 'Debe Ingresar su Rut' : \"\";\r\n        break;\r\n\r\n      case 'name':\r\n        formErrors.name =\r\n        value.length === 0 ? 'Debe ingresar su Nombre' : \"\";\r\n        break;\r\n\r\n      case 'lastName':\r\n        formErrors.lastName =\r\n        value.length === 0 ? 'Debe ingresar su Apellido' : \"\";\r\n        break;\r\n\r\n      case 'password':\r\n        formErrors.password = \r\n        value.length < 8 ? 'Debe contener mÃ­nimo 8 caracteres' : \"\";\r\n        break;\r\n\r\n      case 'email':\r\n        formErrors.email = \r\n        emailRegex.test(value) && value.length > 0\r\n        ? ''\r\n        : \"Ingrese un Email Valido\";\r\n        break;\r\n\r\n      case 'nCollegeMedical':\r\n        formErrors.nCollegeMedical = \r\n        value.length === 0 ? 'Debe ingresar Numero de Colegio Medico' : \"\";\r\n        break;\r\n\r\n      case 'profession':\r\n        formErrors.profession = \r\n        value.length === 0 ? 'Debe ingresar su Profesion' : \"\";\r\n        break;\r\n    }\r\n    //this.setState({formErrors, [name]: value },() => console.log(this.state));\r\n\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {formErrors, ...rest} = this.state\r\n    const result = formValid({formErrors, ...rest})\r\n    if(result === false) return alert('Complete el Formulario')\r\n    this.createUser(rest)\r\n\r\n  }\r\n  createUser = async (info) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/users',info)\r\n      localStorage.setItem('Token',res.data.token)\r\n    } catch(err){\r\n      console.log(\"el error es:\", err)\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { formErrors } = this.state;\r\n    \r\nreturn(\r\n  <div className=\"bg\">\r\n      <center>\r\n        <MDBContainer>\r\n          <MDBRow style={{top:\"50%\"}}>\r\n            <MDBCol md='12'>\r\n              <MDBCard className='card-image' style={{backgroundImage:'url(http://www.wallpaperk.com/wallpapers/envelope-minimal-blue-7837.jpg)', width: '28rem'}}className=\"cont\">\r\n                <div className='text-white rgba-stylish-strong py-5 px-5 z-depth-4'>\r\n                  <div className='text-center'>\r\n                    <h3 className='white-text mb-5 mt-4 font-weight-bold'>\r\n                      <strong>REGISTRO</strong>\r\n                      <strong className='green-text font-weight-bold'> MEDICO</strong>\r\n                    </h3>\r\n                  </div>\r\n                  <MDBInput\r\n                    label='Rut'\r\n                    group\r\n                    type='text'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"rut\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                    name=\"rut\"\r\n                  />\r\n                  {formErrors.rut.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.rut}</span>\r\n                  )}\r\n                  <MDBInput\r\n                    label='Nombre'\r\n                    group\r\n                    type='text'\r\n                    name='name'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"name\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.name.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.name}</span>\r\n                  )}\r\n                  <MDBInput\r\n                    label='Apellido'\r\n                    group\r\n                    type='text'\r\n                    name='lastName'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"lastName\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.lastName.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.lastName}</span>\r\n                  )}\r\n                  <MDBInput\r\n                    label='Email'\r\n                    group\r\n                    type='email'\r\n                    name='email'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"email\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.email.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.email}</span>\r\n                  )}\r\n                  <MDBInput\r\n                    label='ContraseÃ±a'\r\n                    group\r\n                    type='password'\r\n                    name='password'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"password\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.password.length > 0 && (\r\n                  <span className =\"errorMessage\"style={{ color:\"red\"}}>{formErrors.password}</span>\r\n                  )}\r\n                  <MDBInput\r\n                    label='NÂºColegioMedico'\r\n                    group\r\n                    type='number'\r\n                    name='nCollegeMedical'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"nCollegeMedical\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.nCollegeMedical.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.nCollegeMedical}</span>\r\n                  )}\r\n                  <select className=\"browser-default custom-select\" id=\"gender\">\r\n                    <option>Selecciona tu genero</option>\r\n                    <option value=\"1\">Masculino</option>\r\n                    <option value=\"2\">Femenino</option>\r\n                  </select>\r\n                   <MDBInput\r\n                    label='Profesion'\r\n                    group\r\n                    type='text'\r\n                    name='profession'\r\n                    validate\r\n                    labelClass='white-text'\r\n                    onChange={this.handleChange}\r\n                    id=\"profession\"\r\n                    className='white-text mb-5 mt-4 font-weight-bold'\r\n                  />\r\n                  {formErrors.profession.length > 0 && (\r\n                  <span className =\"errorMessage\" style={{ color:\"red\"}}>{formErrors.profession}</span>\r\n                  )}\r\n\r\n                  <MDBRow className='d-flex align-items-center mb-4'>\r\n                    <div className='text-center mb-3 col-md-12'>\r\n                      <MDBBtn\r\n                        color='success'\r\n                        rounded\r\n                        type='button'\r\n                        className='btn-block z-depth-1'\r\n                        onClick={this.handleSubmit}\r\n                      >\r\n                        Registrar\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </MDBRow>\r\n                </div>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </center>\r\n  </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}